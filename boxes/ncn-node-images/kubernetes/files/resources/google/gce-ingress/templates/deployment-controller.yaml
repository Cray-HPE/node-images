#
# MIT License
#
# (C) Copyright 2022 Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "gce-ingress.fullname" . }}-controller
  annotations:
    scheduler.alpha.kubernetes.io/critical-pod: ''
  labels:
    k8s-app: gcp-lb-controller
    kubernetes.io/name: "GLBC"
spec:
  replicas: {{ .Values.controller.replicas }}
  selector:
    matchLabels:
      k8s-app: gcp-lb-controller
  template:
    metadata:
      labels:
        k8s-app: gcp-lb-controller
        name: gcp-lb-controller
    spec:
      serviceAccountName: {{ include "gce-ingress.fullname" . }}
      terminationGracePeriodSeconds: 600
      hostNetwork: true
      containers:
      - image: {{ .Values.controller.image.repository }}:{{ .Values.controller.image.tag }}
        imagePullPolicy: {{ .Values.controller.image.pullPolicy }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8086
            scheme: HTTP
          initialDelaySeconds: 30
          # healthz reaches out to GCE
          periodSeconds: 30
          timeoutSeconds: 15
          successThreshold: 1
          failureThreshold: 5
        name: l7-lb-controller
        volumeMounts:
        - mountPath: /etc/gce/
          name: gce-config-volume
        - mountPath: /var/secrets/google
          name: google-cloud-key
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /var/secrets/google/key.json
        resources:
          # Request is set to accommodate this pod alongside the other
          # master components on a single core master.
          # TODO: Make resource requirements depend on the size of the cluster
          requests:
            cpu: 10m
            memory: 50Mi
        command:
        - /glbc
        - -v2
        - --config-file-path=/etc/gce/gce.conf
        - --healthz-port=8086
        - --logtostderr
        - --sync-period=600s
        - --gce-ratelimit=ga.Operations.Get,qps,10,100
        - --gce-ratelimit=alpha.Operations.Get,qps,10,100
        - --gce-ratelimit=ga.BackendServices.Get,qps,1.8,1
        - --gce-ratelimit=ga.HealthChecks.Get,qps,1.8,1
        - --gce-ratelimit=alpha.HealthChecks.Get,qps,1.8,1
        - --default-backend-service={{ .Release.Namespace }}/{{ include "gce-ingress.fullname" . }}-backend
      volumes:
      - name: google-cloud-key
        secret:
          secretName: {{ .Values.secretName }}
      - name: gce-config-volume
        configMap:
          name: {{ .Values.configMapName }}
          items:
          - key: gce.conf
            path: gce.conf
